titleXPath = paste0(commonXpath, 'title')
title = xpathSApply(root[[i]], titleXPath, xmlValue)
bookDf$title[i] <- title
genreXpath = paste0(commonXpath, 'genre')
genre = xpathSApply(root[[i]], genreXpath, xmlValue)
bookDf$genre_id[i] <- which(genreDf$name == genre)
priceXPath = paste0(commonXpath, 'price')
price = xpathSApply(root[[i]], priceXPath, xmlValue)
bookDf$price[i] <- as.double(price)
pDateXPath = paste0(commonXpath, 'publish_date')
pDate = xpathSApply(root[[i]], pDateXPath, xmlValue)
bookDf$publish_date[i] <- pDate
bookDf$description[i] <- xmlValue(root[[i]][6]$description)
descriptionXPath = paste0(commonXpath, 'description')
description = xpathSApply(root[[i]], descriptionXPath, xmlValue)
bookDf$description <- description
}
for (i in 1:sizeOfXML) {
bid <- xmlAttrs(root[[i]])
commonXpath = sprintf("/catalog/book[@id='%s']/", bid)
bookDf$book_id[i] <- as.integer(gsub('bk', '' , bid))
titleXPath = paste0(commonXpath, 'title')
title = xpathSApply(root[[i]], titleXPath, xmlValue)
bookDf$title[i] <- title
genreXpath = paste0(commonXpath, 'genre')
genre = xpathSApply(root[[i]], genreXpath, xmlValue)
bookDf$genre_id[i] <- which(genreDf$name == genre)
priceXPath = paste0(commonXpath, 'price')
price = xpathSApply(root[[i]], priceXPath, xmlValue)
bookDf$price[i] <- as.double(price)
pDateXPath = paste0(commonXpath, 'publish_date')
pDate = xpathSApply(root[[i]], pDateXPath, xmlValue)
bookDf$publish_date[i] <- pDate
bookDf$description[i] <- xmlValue(root[[i]][6]$description)
descriptionXPath = paste0(commonXpath, 'description')
description = xpathSApply(root[[i]], descriptionXPath, xmlValue)
bookDf$description <- description
}
View(bookDf)
for (i in 1:sizeOfXML) {
bid <- xmlAttrs(root[[i]])
commonXpath = sprintf("/catalog/book[@id='%s']/", bid)
bookDf$book_id[i] <- as.integer(gsub('bk', '' , bid))
titleXPath = paste0(commonXpath, 'title')
title = xpathSApply(root[[i]], titleXPath, xmlValue)
bookDf$title[i] <- title
genreXpath = paste0(commonXpath, 'genre')
genre = xpathSApply(root[[i]], genreXpath, xmlValue)
bookDf$genre_id[i] <- which(genreDf$name == genre)
priceXPath = paste0(commonXpath, 'price')
price = xpathSApply(root[[i]], priceXPath, xmlValue)
bookDf$price[i] <- as.double(price)
pDateXPath = paste0(commonXpath, 'publish_date')
pDate = xpathSApply(root[[i]], pDateXPath, xmlValue)
bookDf$publish_date[i] <- pDate
descriptionXPath = paste0(commonXpath, 'description')
description = xpathSApply(root[[i]], descriptionXPath, xmlValue)
bookDf$description <- description
}
View(authorDf)
View(bookDf)
for (i in 1:sizeOfXML) {
bid <- xmlAttrs(root[[i]])
commonXpath = sprintf("/catalog/book[@id='%s']/", bid)
bookDf$book_id[i] <- as.integer(gsub('bk', '' , bid))
titleXPath = paste0(commonXpath, 'title')
title = xpathSApply(root[[i]], titleXPath, xmlValue)
bookDf$title[i] <- title
genreXpath = paste0(commonXpath, 'genre')
genre = xpathSApply(root[[i]], genreXpath, xmlValue)
bookDf$genre_id[i] <- which(genreDf$name == genre)
priceXPath = paste0(commonXpath, 'price')
price = xpathSApply(root[[i]], priceXPath, xmlValue)
bookDf$price[i] <- as.double(price)
pDateXPath = paste0(commonXpath, 'publish_date')
pDate = xpathSApply(root[[i]], pDateXPath, xmlValue)
bookDf$publish_date[i] <- pDate
descriptionXPath = paste0(commonXpath, 'description')
description = xpathSApply(root[[i]], descriptionXPath, xmlValue)
bookDf$description[i] <- description
}
View(bookDf)
print(xpathSApply(root[[1]], "/catalog/book[@id='bk118']/author", xmlValue))
print(xpathSApply(root[[1]], "/catalog/book[@id='bk118']/author", xmlValue))[[1]]
print(xpathSApply(root[[1]], "/catalog/book[@id='bk118']/author", xmlValue))[[1]][2]
print(length(xpathSApply(root[[1]], "/catalog/book[@id='bk118']/author", xmlValue)))
abc = xpathSApply(root[[1]], "/catalog/book[@id='bk118']/author", xmlValue)
abc[1]
abc[2]
abc[3]
strsplit("Kamarovsky, Susan", ", ")[[1]][1]
bookIds = c()
authorIds = c()
populateAuthors <- function(bookId, authors) {
nAuthors = length(authors)
for (i in 1:nAuthors) {
bookIds <- c(bookIds, bookId)
splitAuthorName <- strsplit(authors[i], ", ")[[1]]
locatedAuthor <- which(authorDf$fname == splitAuthorName[2] & authorDf$lname == splitAuthorName[1])
authorIds <- c(authorIds, locatedAuthor)
}
}
for (i in 1:sizeOfXML) {
bid <- xmlAttrs(root[[i]])
commonXpath = sprintf("/catalog/book[@id='%s']/", bid)
bookDf$book_id[i] <- as.integer(gsub('bk', '' , bid))
authorXPath <- paste0(commonXpath, 'author')
authors <- xpathSApply(root[[i]], authorXPath, xmlValue)
populateAuthors(position, bid, authors)
titleXPath = paste0(commonXpath, 'title')
title = xpathSApply(root[[i]], titleXPath, xmlValue)
bookDf$title[i] <- title
genreXpath = paste0(commonXpath, 'genre')
genre = xpathSApply(root[[i]], genreXpath, xmlValue)
bookDf$genre_id[i] <- which(genreDf$name == genre)
priceXPath = paste0(commonXpath, 'price')
price = xpathSApply(root[[i]], priceXPath, xmlValue)
bookDf$price[i] <- as.double(price)
pDateXPath = paste0(commonXpath, 'publish_date')
pDate = xpathSApply(root[[i]], pDateXPath, xmlValue)
bookDf$publish_date[i] <- pDate
descriptionXPath = paste0(commonXpath, 'description')
description = xpathSApply(root[[i]], descriptionXPath, xmlValue)
bookDf$description[i] <- description
}
bookIds = c()
authorIds = c()
populateAuthors <- function(bookId, authors) {
nAuthors = length(authors)
for (i in 1:nAuthors) {
bookIds <- c(bookIds, bookId)
splitAuthorName <- strsplit(authors[i], ", ")[[1]]
locatedAuthor <- which(authorDf$fname == splitAuthorName[2] & authorDf$lname == splitAuthorName[1])
authorIds <- c(authorIds, locatedAuthor)
}
}
for (i in 1:sizeOfXML) {
bid <- xmlAttrs(root[[i]])
commonXpath = sprintf("/catalog/book[@id='%s']/", bid)
bookDf$book_id[i] <- as.integer(gsub('bk', '' , bid))
authorXPath <- paste0(commonXpath, 'author')
authors <- xpathSApply(root[[i]], authorXPath, xmlValue)
populateAuthors(bid, authors)
titleXPath = paste0(commonXpath, 'title')
title = xpathSApply(root[[i]], titleXPath, xmlValue)
bookDf$title[i] <- title
genreXpath = paste0(commonXpath, 'genre')
genre = xpathSApply(root[[i]], genreXpath, xmlValue)
bookDf$genre_id[i] <- which(genreDf$name == genre)
priceXPath = paste0(commonXpath, 'price')
price = xpathSApply(root[[i]], priceXPath, xmlValue)
bookDf$price[i] <- as.double(price)
pDateXPath = paste0(commonXpath, 'publish_date')
pDate = xpathSApply(root[[i]], pDateXPath, xmlValue)
bookDf$publish_date[i] <- pDate
descriptionXPath = paste0(commonXpath, 'description')
description = xpathSApply(root[[i]], descriptionXPath, xmlValue)
bookDf$description[i] <- description
}
print(bookIds)
print(authorIds)
bookIds = c()
authorIds = c()
populateAuthors <- function(bookId, authors) {
nAuthors = length(authors)
for (i in 1:nAuthors) {
bookIds <- c(bookIds, as.integer(bookId))
splitAuthorName <- strsplit(authors[i], ", ")[[1]]
locatedAuthor <- which(authorDf$fname == splitAuthorName[2] & authorDf$lname == splitAuthorName[1])
authorIds <- c(authorIds, locatedAuthor)
}
}
for (i in 1:sizeOfXML) {
bid <- xmlAttrs(root[[i]])
commonXpath = sprintf("/catalog/book[@id='%s']/", bid)
bookDf$book_id[i] <- as.integer(gsub('bk', '' , bid))
authorXPath <- paste0(commonXpath, 'author')
authors <- xpathSApply(root[[i]], authorXPath, xmlValue)
populateAuthors(bid, authors)
titleXPath = paste0(commonXpath, 'title')
title = xpathSApply(root[[i]], titleXPath, xmlValue)
bookDf$title[i] <- title
genreXpath = paste0(commonXpath, 'genre')
genre = xpathSApply(root[[i]], genreXpath, xmlValue)
bookDf$genre_id[i] <- which(genreDf$name == genre)
priceXPath = paste0(commonXpath, 'price')
price = xpathSApply(root[[i]], priceXPath, xmlValue)
bookDf$price[i] <- as.double(price)
pDateXPath = paste0(commonXpath, 'publish_date')
pDate = xpathSApply(root[[i]], pDateXPath, xmlValue)
bookDf$publish_date[i] <- pDate
descriptionXPath = paste0(commonXpath, 'description')
description = xpathSApply(root[[i]], descriptionXPath, xmlValue)
bookDf$description[i] <- description
}
print(bookIds)
print(authorIds)
bookIds = c()
authorIds = c()
populateAuthors <- function(bookId, authors) {
nAuthors = length(authors)
for (i in 1:nAuthors) {
bookIds <- c(bookIds, as.integer(bookId))
splitAuthorName <- strsplit(authors[i], ", ")[[1]]
locatedAuthor <- which(authorDf$fname == splitAuthorName[2] & authorDf$lname == splitAuthorName[1])
print(locatedAuthor)
authorIds <- c(authorIds, locatedAuthor)
}
}
for (i in 1:sizeOfXML) {
bid <- xmlAttrs(root[[i]])
commonXpath = sprintf("/catalog/book[@id='%s']/", bid)
bookDf$book_id[i] <- as.integer(gsub('bk', '' , bid))
authorXPath <- paste0(commonXpath, 'author')
authors <- xpathSApply(root[[i]], authorXPath, xmlValue)
populateAuthors(bid, authors)
titleXPath = paste0(commonXpath, 'title')
title = xpathSApply(root[[i]], titleXPath, xmlValue)
bookDf$title[i] <- title
genreXpath = paste0(commonXpath, 'genre')
genre = xpathSApply(root[[i]], genreXpath, xmlValue)
bookDf$genre_id[i] <- which(genreDf$name == genre)
priceXPath = paste0(commonXpath, 'price')
price = xpathSApply(root[[i]], priceXPath, xmlValue)
bookDf$price[i] <- as.double(price)
pDateXPath = paste0(commonXpath, 'publish_date')
pDate = xpathSApply(root[[i]], pDateXPath, xmlValue)
bookDf$publish_date[i] <- pDate
descriptionXPath = paste0(commonXpath, 'description')
description = xpathSApply(root[[i]], descriptionXPath, xmlValue)
bookDf$description[i] <- description
}
print(bookIds)
print(authorIds)
bookIds = c()
authorIds = c()
populateAuthors <- function(bookId, authors) {
nAuthors = length(authors)
for (i in 1:nAuthors) {
bookIds <- c(bookIds, as.integer(bookId))
splitAuthorName <- strsplit(authors[i], ", ")[[1]]
locatedAuthor <- which(authorDf$fname == splitAuthorName[2] & authorDf$lname == splitAuthorName[1])
print(locatedAuthor)
authorIds <- c(authorIds, locatedAuthor)
}
}
for (i in 1:sizeOfXML) {
bid <- xmlAttrs(root[[i]])
commonXpath = sprintf("/catalog/book[@id='%s']/", bid)
bookDf$book_id[i] <- as.integer(gsub('bk', '' , bid))
authorXPath <- paste0(commonXpath, 'author')
authors <- xpathSApply(root[[i]], authorXPath, xmlValue)
populateAuthors(bid, authors)
titleXPath = paste0(commonXpath, 'title')
title = xpathSApply(root[[i]], titleXPath, xmlValue)
bookDf$title[i] <- title
genreXpath = paste0(commonXpath, 'genre')
genre = xpathSApply(root[[i]], genreXpath, xmlValue)
bookDf$genre_id[i] <- which(genreDf$name == genre)
priceXPath = paste0(commonXpath, 'price')
price = xpathSApply(root[[i]], priceXPath, xmlValue)
bookDf$price[i] <- as.double(price)
pDateXPath = paste0(commonXpath, 'publish_date')
pDate = xpathSApply(root[[i]], pDateXPath, xmlValue)
bookDf$publish_date[i] <- pDate
descriptionXPath = paste0(commonXpath, 'description')
description = xpathSApply(root[[i]], descriptionXPath, xmlValue)
bookDf$description[i] <- description
}
print(bookIds)
print(authorIds)
bookIds = c()
authorIds = c()
populateAuthors <- function(bookId, authors, bookIds, authorIds) {
nAuthors = length(authors)
for (i in 1:nAuthors) {
bookIds <- c(bookIds, as.integer(bookId))
splitAuthorName <- strsplit(authors[i], ", ")[[1]]
locatedAuthor <- which(authorDf$fname == splitAuthorName[2] & authorDf$lname == splitAuthorName[1])
print(locatedAuthor)
authorIds <- c(authorIds, locatedAuthor)
}
return(list(bookIds = bookIds, authorIds = authorIds))
}
for (i in 1:sizeOfXML) {
bid <- xmlAttrs(root[[i]])
commonXpath = sprintf("/catalog/book[@id='%s']/", bid)
bookDf$book_id[i] <- as.integer(gsub('bk', '' , bid))
authorXPath <- paste0(commonXpath, 'author')
authors <- xpathSApply(root[[i]], authorXPath, xmlValue)
result <- populateAuthors(bid, authors, bookIds, authorIds)
bookIds <- result$bookIds
authorIds <- result$authorIds
titleXPath = paste0(commonXpath, 'title')
title = xpathSApply(root[[i]], titleXPath, xmlValue)
bookDf$title[i] <- title
genreXpath = paste0(commonXpath, 'genre')
genre = xpathSApply(root[[i]], genreXpath, xmlValue)
bookDf$genre_id[i] <- which(genreDf$name == genre)
priceXPath = paste0(commonXpath, 'price')
price = xpathSApply(root[[i]], priceXPath, xmlValue)
bookDf$price[i] <- as.double(price)
pDateXPath = paste0(commonXpath, 'publish_date')
pDate = xpathSApply(root[[i]], pDateXPath, xmlValue)
bookDf$publish_date[i] <- pDate
descriptionXPath = paste0(commonXpath, 'description')
description = xpathSApply(root[[i]], descriptionXPath, xmlValue)
bookDf$description[i] <- description
}
print(bookIds)
print(authorIds)
xmlFile <- "Books-v4.xml"
pathToFile <- paste0(cwd, .Platform$file.sep, xmlFile)
parsedXML <- xmlParse(pathToFile, trim = T)
root <- xmlRoot(parsedXML)
sizeOfXML <- xmlSize(root)
firstNames <- c()
lastNames <- c()
authorXPath <- "//author"
author <- xpathSApply(root, authorXPath, xmlValue)
nauthor <- length(author)
for (i in 1:nauthor) {
splitAuthorName <- strsplit(author[i], ', ')
firstNames <- c(firstNames, splitAuthorName[[1]][[2]])
lastNames <- c(lastNames, splitAuthorName[[1]][[1]])
}
firstNames <- unique(firstNames)
lastNames <- unique(lastNames)
noOfUniqueAuthors <- length(firstNames)
authorDf <- data.frame (author_id =  integer(noOfUniqueAuthors),
fname = character(noOfUniqueAuthors),
lname = character(noOfUniqueAuthors),
stringsAsFactors = F)
authorDf$author_id <- 1:noOfUniqueAuthors
authorDf$fname = firstNames
authorDf$lname = lastNames
genre = c()
authorXPath <- "//genre"
genres <- xpathSApply(root, authorXPath, xmlValue)
ngenres <- length(genres)
for (i in 1:ngenres) {
genre <- c(genre, genres[i])
}
genre <- unique(genre)
noOfUniqueGenres <- length(genre)
genreDf <- data.frame (genre_id =  integer(noOfUniqueGenres),
name = character(noOfUniqueGenres),
stringsAsFactors = F)
genreDf$genre_id <- 1:noOfUniqueGenres
genreDf$name = genre
bookDf <- data.frame (book_id =  integer(sizeOfXML),
title = character(sizeOfXML),
price = double(sizeOfXML),
publish_date = character(sizeOfXML),
description = character(sizeOfXML),
genre_id = integer(sizeOfXML),
stringsAsFactors = F)
bookIds = c()
authorIds = c()
populateAuthors <- function(bookId, authors, bookIds, authorIds) {
nAuthors = length(authors)
for (i in 1:nAuthors) {
bookIds <- c(bookIds, as.integer(gsub('bk', '' , bookId)))
splitAuthorName <- strsplit(authors[i], ", ")[[1]]
locatedAuthor <- which(authorDf$fname == splitAuthorName[2] & authorDf$lname == splitAuthorName[1])
print(locatedAuthor)
authorIds <- c(authorIds, locatedAuthor)
}
return(list(bookIds = bookIds, authorIds = authorIds))
}
for (i in 1:sizeOfXML) {
bid <- xmlAttrs(root[[i]])
commonXpath = sprintf("/catalog/book[@id='%s']/", bid)
bookDf$book_id[i] <- as.integer(gsub('bk', '' , bid))
authorXPath <- paste0(commonXpath, 'author')
authors <- xpathSApply(root[[i]], authorXPath, xmlValue)
result <- populateAuthors(bid, authors, bookIds, authorIds)
bookIds <- result$bookIds
authorIds <- result$authorIds
titleXPath = paste0(commonXpath, 'title')
title = xpathSApply(root[[i]], titleXPath, xmlValue)
bookDf$title[i] <- title
genreXpath = paste0(commonXpath, 'genre')
genre = xpathSApply(root[[i]], genreXpath, xmlValue)
bookDf$genre_id[i] <- which(genreDf$name == genre)
priceXPath = paste0(commonXpath, 'price')
price = xpathSApply(root[[i]], priceXPath, xmlValue)
bookDf$price[i] <- as.double(price)
pDateXPath = paste0(commonXpath, 'publish_date')
pDate = xpathSApply(root[[i]], pDateXPath, xmlValue)
bookDf$publish_date[i] <- pDate
descriptionXPath = paste0(commonXpath, 'description')
description = xpathSApply(root[[i]], descriptionXPath, xmlValue)
bookDf$description[i] <- description
}
print(bookIds)
print(authorIds)
rm(list = ls)_
rm(list = ls())
include_graphics('erd.jpeg')
library(XML)
library(knitr)
library(RSQLite)
xmlFile <- "Books-v4.xml"
pathToFile <- paste0(cwd, .Platform$file.sep, xmlFile)
cwd <- getwd()
dbFile <- "book.db"
pathToDb <- paste0(cwd,  .Platform$file.sep, dbFile)
conn <-
dbConnect(RSQLite::SQLite(), pathToDb)
xmlFile <- "Books-v4.xml"
pathToFile <- paste0(cwd, .Platform$file.sep, xmlFile)
parsedXML <- xmlParse(pathToFile, trim = T)
root <- xmlRoot(parsedXML)
sizeOfXML <- xmlSize(root)
# --- Author
firstNames <- c()
lastNames <- c()
authorXPath <- "//author"
author <- xpathSApply(root, authorXPath, xmlValue)
nauthor <- length(author)
for (i in 1:nauthor) {
splitAuthorName <- strsplit(author[i], ', ')
firstNames <- c(firstNames, splitAuthorName[[1]][[2]])
lastNames <- c(lastNames, splitAuthorName[[1]][[1]])
}
firstNames <- unique(firstNames)
lastNames <- unique(lastNames)
noOfUniqueAuthors <- length(firstNames)
authorDf <- data.frame (author_id =  integer(noOfUniqueAuthors),
fname = character(noOfUniqueAuthors),
lname = character(noOfUniqueAuthors),
stringsAsFactors = F)
authorDf$author_id <- 1:noOfUniqueAuthors
authorDf$fname = firstNames
authorDf$lname = lastNames
# --- Author
# --- Genre
genre = c()
authorXPath <- "//genre"
genres <- xpathSApply(root, authorXPath, xmlValue)
ngenres <- length(genres)
for (i in 1:ngenres) {
genre <- c(genre, genres[i])
}
genre <- unique(genre)
noOfUniqueGenres <- length(genre)
genreDf <- data.frame (genre_id =  integer(noOfUniqueGenres),
name = character(noOfUniqueGenres),
stringsAsFactors = F)
genreDf$genre_id <- 1:noOfUniqueGenres
genreDf$name = genre
# --- Genre
# --- Book
bookDf <- data.frame (book_id =  integer(sizeOfXML),
title = character(sizeOfXML),
price = double(sizeOfXML),
publish_date = character(sizeOfXML),
description = character(sizeOfXML),
genre_id = integer(sizeOfXML),
stringsAsFactors = F)
bookIds = c()
authorIds = c()
populateAuthors <- function(bookId, authors, bookIds, authorIds) {
nAuthors = length(authors)
for (i in 1:nAuthors) {
bookIds <- c(bookIds, bookId)
splitAuthorName <- strsplit(authors[i], ", ")[[1]]
locatedAuthor <- which(authorDf$fname == splitAuthorName[2] & authorDf$lname == splitAuthorName[1])
authorIds <- c(authorIds, locatedAuthor)
}
return(list(bookIds = bookIds, authorIds = authorIds))
}
for (i in 1:sizeOfXML) {
bid <- xmlAttrs(root[[i]])
commonXpath = sprintf("/catalog/book[@id='%s']/", bid)
bookDf$book_id[i] <- bid
authorXPath <- paste0(commonXpath, 'author')
authors <- xpathSApply(root[[i]], authorXPath, xmlValue)
result <- populateAuthors(bid, authors, bookIds, authorIds)
bookIds <- result$bookIds
authorIds <- result$authorIds
titleXPath = paste0(commonXpath, 'title')
title = xpathSApply(root[[i]], titleXPath, xmlValue)
bookDf$title[i] <- title
genreXpath = paste0(commonXpath, 'genre')
genre = xpathSApply(root[[i]], genreXpath, xmlValue)
bookDf$genre_id[i] <- which(genreDf$name == genre)
priceXPath = paste0(commonXpath, 'price')
price = xpathSApply(root[[i]], priceXPath, xmlValue)
bookDf$price[i] <- as.double(price)
pDateXPath = paste0(commonXpath, 'publish_date')
pDate = xpathSApply(root[[i]], pDateXPath, xmlValue)
bookDf$publish_date[i] <- pDate
editionXPath = paste0(commonXpath, 'edition')
edition = xpathSApply(root[[i]], editionXPath, xmlValue)
print(edition)
descriptionXPath = paste0(commonXpath, 'description')
description = xpathSApply(root[[i]], descriptionXPath, xmlValue)
bookDf$description[i] <- description
}
nAuthorIds <- length(authorIds)
# --- Book
# --- Book_Author_Junction
bookAuthorJnDf <- data.frame (ab_jn_id =  integer(nAuthorIds),
book_id = integer(nAuthorIds),
author_id = integer(nAuthorIds),
stringsAsFactors = F)
bookAuthorJnDf$book_id <- bookIds
bookAuthorJnDf$author_id <- authorIds
bookAuthorJnDf$ab_jn_id <- 1:nAuthorIds
# --- Book_Author_Junction
